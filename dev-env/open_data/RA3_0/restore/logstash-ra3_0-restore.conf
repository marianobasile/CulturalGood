input {
	file {
			path =>	"${RA_DIR:/usr/share/logstash/RA3_0/toscana}/res/ra3_0-restore.json" 
			# start reading new files (never seen before) from the beginning 
			start_position => "beginning"
			# start reading already seen files from beginning.
			sincedb_path => "/dev/null"
			codec => "json"
	}	
}

filter {

	#REMOVE UNNECESSARY FIELDS.
	mutate {
		remove_field => [ host, path, '@timestamp', timestamp ]
	}

	ruby { 
    code => "event.set('timestamp', Time.now());"
	}
}

output {
	
	if [id_to_delete] {

		elasticsearch {
			action => "delete"
			document_id => "%{[id_to_delete]}"
			hosts => [ "${ELASTICSEARCH_HOST:elasticsearch}:9200" ]
	    index => "ra3_0"
		}

	} else if [cd] {

		elasticsearch {
			action => "index"
			document_id => "%{[fingerprint]}"
			hosts => [ "${ELASTICSEARCH_HOST:elasticsearch}:9200" ]
	    index => "ra3_0"
	    template => "${RA_DIR:/usr/share/logstash/RA3_0/toscana}/ra3_0-template.json"
	    template_name => "cultural-good_ra"
	    template_overwrite => true
		}
	} else {

		elasticsearch {
			action => "update"
			doc_as_upsert => true
			document_id => "%{[fingerprint]}"
			hosts => [ "${ELASTICSEARCH_HOST:elasticsearch}:9200" ]
	    index => "ra3_0"
	    template => "${RA_DIR:/usr/share/logstash/RA3_0/toscana}/ra3_0-template.json"
	    template_name => "cultural-good_ra"
	    template_overwrite => true
		}

	}

	#stdout { codec => rubydebug }
	
}